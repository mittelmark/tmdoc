= Hello, AsciiDoc!
Doc Writer <doc@example.com>
:stylesheet: tmdoc.css

`tcl include header.adoc`

An introduction to http://asciidoc.org[AsciiDoc].

== First Section

* item 1
* item 2

[source,ruby]
----
puts "Hello, World!"
----


```{.tcl}
puts "Hello Tcl"
```

```{.tcl}
lappend auto_path ../modules
package require tsvg
tsvg set width 100
tsvg set height 100
# Tcl like syntax without hyphens
tsvg circle cx 50 cy 50 r 45 stroke black stroke-width 2 fill salmon
tsvg text x 29 y 45 Hello
tsvg text x 27 y 65 World!
tsvg write hello-world.svg
### cleanup
tsvg set code ""
puts done
```

image::hello-world.svg[]

An example equation:

```{.mtex}
E = mc^2
```

== Tcl Lists to Tables

An example for a table given as a Tcl  list:

```{std}
'``{.tcl results=asis,echo=false}
set h [list A B C]
set d [list 1 2 3 4 5 6 7 8 9]
puts [list2tab $h $d]
'``
```

```{.tcl results=asis,echo=false}
set h [list A B C]
set d [list 1 2 3 4 5 6 7 8 9]
puts [list2tab $h $d]
```

== CSV Display

Since version 0.15.0 with AsciiDoc it is as well to embed CSV (Comma Separated Values) data into the documents and return
the data as text. Here an example:

```{.csv results=asis}
col1,col2,col3,col4
1,2,3,4
5,6,7,8
9,10,11,12
```

As with other code chunks you can as well hide the input by using `echo=false`. Here data from an other table:

```{.csv results=asis echo=false}
col1,col2,col3,col4
11,12,13,14
15,16,17,18
19,20,21,22
```
